{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/FBT/Documents/Git-Figpi/figpi-frontend/src/components/utils/FileUploader.jsx\";\nimport React from \"react\";\n\nfunction FileUploader(props) {\n  const uploadFile = e => {\n    e.preventDefault(); // Prevent Page reload\n    // Get the form data\n\n    const formData = new FormData();\n    const selectedFile = document.getElementById(\"inputGroupFile02\").files[0];\n    formData.append(\"file\", selectedFile); // Set options for Request\n\n    var requestOptions = {\n      method: \"PUT\",\n      body: formData,\n      mode: \"cors\",\n      headers: {\n        Accept: \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        Connection: \"keep-alive\"\n      }\n    }; // Define Values in rquest header\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Token 37ba188c2184d0009fd814a17ec696c39de9644e\"); // Send HTTP request\n\n    fetch(props.endpoint, requestOptions).then(response => checkStatus(response));\n  }; // Execute is HTTP request is succesful.\n\n\n  const checkStatus = response => {\n    console.log(response);\n\n    if (response.status === 200) {\n      console.log(\"Det virker\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: uploadFile,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"input_file\",\n        className: \"form-control br-0\",\n        id: \"inputGroupFile02\",\n        accept: \".csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-auth br-0\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FileUploader;\nexport default FileUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"sources":["/Users/FBT/Documents/Git-Figpi/figpi-frontend/src/components/utils/FileUploader.jsx"],"names":["React","FileUploader","props","uploadFile","e","preventDefault","formData","FormData","selectedFile","document","getElementById","files","append","requestOptions","method","body","mode","headers","Accept","Connection","myHeaders","Headers","fetch","endpoint","then","response","checkStatus","console","log","status"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CACJ;AAEpB;;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KAA5C,CAAkD,CAAlD,CAArB;AACAL,IAAAA,QAAQ,CAACM,MAAT,CAAgB,MAAhB,EAAwBJ,YAAxB,EANwB,CAQxB;;AACA,QAAIK,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,IAAI,EAAET,QAFa;AAGnBU,MAAAA,IAAI,EAAE,MAHa;AAInBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,KADD;AAEP,2BAAmB,mBAFZ;AAGPC,QAAAA,UAAU,EAAE;AAHL;AAJU,KAArB,CATwB,CAoBxB;;AACA,QAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACR,MAAV,CACE,eADF,EAEE,gDAFF,EAtBwB,CA2BxB;;AACAU,IAAAA,KAAK,CAACpB,KAAK,CAACqB,QAAP,EAAiBV,cAAjB,CAAL,CAAsCW,IAAtC,CAA4CC,QAAD,IACzCC,WAAW,CAACD,QAAD,CADb;AAGD,GA/BD,CAD2B,CAkC3B;;;AACA,QAAMC,WAAW,GAAID,QAAD,IAAc;AAChCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,QAAIA,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3BF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF,GAND;;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEzB,UAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,SAAS,EAAC,mBAHZ;AAIE,QAAA,EAAE,EAAC,kBAJL;AAKE,QAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KA3DQF,Y;AA6DT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\nfunction FileUploader(props) {\n  const uploadFile = (e) => {\n    e.preventDefault(); // Prevent Page reload\n\n    // Get the form data\n    const formData = new FormData();\n    const selectedFile = document.getElementById(\"inputGroupFile02\").files[0];\n    formData.append(\"file\", selectedFile);\n\n    // Set options for Request\n    var requestOptions = {\n      method: \"PUT\",\n      body: formData,\n      mode: \"cors\",\n      headers: {\n        Accept: \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        Connection: \"keep-alive\",\n      },\n    };\n\n    // Define Values in rquest header\n    var myHeaders = new Headers();\n    myHeaders.append(\n      \"Authorization\",\n      \"Token 37ba188c2184d0009fd814a17ec696c39de9644e\"\n    );\n\n    // Send HTTP request\n    fetch(props.endpoint, requestOptions).then((response) =>\n      checkStatus(response)\n    );\n  };\n\n  // Execute is HTTP request is succesful.\n  const checkStatus = (response) => {\n    console.log(response);\n\n    if (response.status === 200) {\n      console.log(\"Det virker\");\n    }\n  };\n\n  return (\n    <form onSubmit={uploadFile}>\n      <div className=\"input-group\">\n        <input\n          type=\"file\"\n          name=\"input_file\"\n          className=\"form-control br-0\"\n          id=\"inputGroupFile02\"\n          accept=\".csv\"\n        />\n        <button type=\"submit\" className=\"btn btn-auth br-0\">\n          Upload\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default FileUploader;\n"]},"metadata":{},"sourceType":"module"}
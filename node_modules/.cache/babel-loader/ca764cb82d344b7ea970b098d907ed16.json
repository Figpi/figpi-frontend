{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/FBT/Documents/Git-Figpi/figpi-frontend/src/components/core/ndata/Menu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BsArrowRepeat, BsCloudDownload, BsCloudUpload, BsTrash } from \"react-icons/bs\";\nimport { GoSettings } from \"react-icons/go\";\nexport default function Menu(props) {\n  _s();\n\n  const [Uvisible, setUvisible] = useState(false); // upload visibility\n\n  const [Svisible, setSvisible] = useState(false); // settings visibility\n\n  const ucollapse = () => {\n    setSvisible(false); // collapse other bodies\n\n    if (Uvisible === true) {\n      setUvisible(false);\n    } else {\n      setUvisible(true);\n    }\n  };\n\n  const scollapse = () => {\n    setUvisible(false); // collapse other bodies\n\n    if (Svisible === true) {\n      setSvisible(false);\n    } else {\n      setSvisible(true);\n    }\n  }; // if number of items in results != 0;\n\n\n  let count_check = false;\n\n  if (props.res.count !== undefined) {\n    count_check = true;\n  } // Set callbakc for r\n\n\n  const setCallback = () => {\n    props.updateRequest();\n  };\n\n  console.log(props.res);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header py-0 data--header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-left d-inline-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"my-0 mr-3 font-weight-bold dt-title-text\",\n          children: props.menu_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: count_check ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [props.res.count, \" of \", props.res.count, \" rows.\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group btn-group-lg\",\n          role: \"group\",\n          \"aria-label\": \"Control command group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: setCallback,\n            className: \"btn btn-outline-theme\",\n            children: /*#__PURE__*/_jsxDEV(BsArrowRepeat, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-theme\",\n            children: /*#__PURE__*/_jsxDEV(BsCloudDownload, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-theme\",\n            onClick: ucollapse,\n            children: /*#__PURE__*/_jsxDEV(BsCloudUpload, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-theme\",\n            onClick: scollapse,\n            children: /*#__PURE__*/_jsxDEV(GoSettings, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), Uvisible ? /*#__PURE__*/_jsxDEV(FileUploader, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), Svisible ? /*#__PURE__*/_jsxDEV(DtSettings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n} // Datatable Settings Component\n\n_s(Menu, \"I9yth4ahW3rw9n4or2np23c6Xuw=\");\n\n_c = Menu;\n\nconst DtSettings = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data--settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        value: \"\",\n        id: \"flexCheckDefault\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"flexCheckDefault\",\n        children: \"Default checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        value: \"\",\n        id: \"flexCheckChecked\",\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"flexCheckChecked\",\n        children: \"Checked checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}; // File uploader\n\n\n_c2 = DtSettings;\n\nconst FileUploader = props => {\n  const uploadFile = e => {\n    e.preventDefault(); // Prevent Page reload\n    // Get the form data\n\n    const formData = new FormData();\n    const selectedFile = document.getElementById(\"inputGroupFile02\").files[0];\n    formData.append(\"file\", selectedFile); // Set options for Request\n\n    var requestOptions = {\n      method: \"PUT\",\n      body: formData,\n      mode: \"cors\",\n      headers: {\n        Accept: \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        Connection: \"keep-alive\"\n      }\n    }; // Define Values in rquest header\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Token 37ba188c2184d0009fd814a17ec696c39de9644e\"); // Send HTTP request\n\n    fetch(props.upload_ep, requestOptions).then(response => checkStatus(response));\n  }; // Execute is HTTP request is succesful.\n\n\n  const checkStatus = response => {\n    console.log(response);\n\n    if (response.status === 200) {\n      console.log(\"Det virker\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: uploadFile,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"input_file\",\n        className: \"form-control br-0\",\n        id: \"inputGroupFile02\",\n        accept: \".csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-auth br-0\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = FileUploader;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Menu\");\n$RefreshReg$(_c2, \"DtSettings\");\n$RefreshReg$(_c3, \"FileUploader\");","map":{"version":3,"sources":["/Users/FBT/Documents/Git-Figpi/figpi-frontend/src/components/core/ndata/Menu.jsx"],"names":["React","useState","BsArrowRepeat","BsCloudDownload","BsCloudUpload","BsTrash","GoSettings","Menu","props","Uvisible","setUvisible","Svisible","setSvisible","ucollapse","scollapse","count_check","res","count","undefined","setCallback","updateRequest","console","log","menu_title","DtSettings","FileUploader","uploadFile","e","preventDefault","formData","FormData","selectedFile","document","getElementById","files","append","requestOptions","method","body","mode","headers","Accept","Connection","myHeaders","Headers","fetch","upload_ep","then","response","checkStatus","status"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BsArrowRepeat,\n  BsCloudDownload,\n  BsCloudUpload,\n  BsTrash,\n} from \"react-icons/bs\";\nimport { GoSettings } from \"react-icons/go\";\n\nexport default function Menu(props) {\n  const [Uvisible, setUvisible] = useState(false); // upload visibility\n  const [Svisible, setSvisible] = useState(false); // settings visibility\n\n  const ucollapse = () => {\n    setSvisible(false); // collapse other bodies\n    if (Uvisible === true) {\n      setUvisible(false);\n    } else {\n      setUvisible(true);\n    }\n  };\n\n  const scollapse = () => {\n    setUvisible(false); // collapse other bodies\n    if (Svisible === true) {\n      setSvisible(false);\n    } else {\n      setSvisible(true);\n    }\n  };\n\n  // if number of items in results != 0;\n  let count_check = false;\n  if (props.res.count !== undefined) {\n    count_check = true;\n  }\n\n  // Set callbakc for r\n  const setCallback = () => {\n    props.updateRequest();\n  };\n\n  console.log(props.res);\n\n  return (\n    <>\n      <div className=\"card-header py-0 data--header\">\n        <div className=\"control-left d-inline-flex\">\n          <p className=\"my-0 mr-3 font-weight-bold dt-title-text\">\n            {props.menu_title}\n          </p>\n          <div>\n            {count_check ? (\n              <>\n                {props.res.count} of {props.res.count} rows.\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n\n        <div className=\"control-right\">\n          <div\n            className=\"btn-group btn-group-lg\"\n            role=\"group\"\n            aria-label=\"Control command group\"\n          >\n            <button\n              type=\"button\"\n              onClick={setCallback}\n              className=\"btn btn-outline-theme\"\n            >\n              <BsArrowRepeat />\n            </button>\n            <button type=\"button\" className=\"btn btn-outline-theme\">\n              <BsCloudDownload />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-theme\"\n              onClick={ucollapse}\n            >\n              <BsCloudUpload />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-theme\"\n              onClick={scollapse}\n            >\n              <GoSettings />\n            </button>\n\n            {/*             <button type=\"button\" className=\"btn btn-outline-theme\">\n                <BsTrash />\n              </button> */}\n          </div>\n        </div>\n      </div>\n\n      {Uvisible ? <FileUploader {...props} /> : <></>}\n      {Svisible ? <DtSettings /> : <></>}\n    </>\n  );\n}\n\n// Datatable Settings Component\nconst DtSettings = () => {\n  return (\n    <div className=\"data--settings\">\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          value=\"\"\n          id=\"flexCheckDefault\"\n        />\n        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n          Default checkbox\n        </label>\n      </div>\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          value=\"\"\n          id=\"flexCheckChecked\"\n          defaultChecked\n        />\n        <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n          Checked checkbox\n        </label>\n      </div>\n    </div>\n  );\n};\n\n// File uploader\nconst FileUploader = (props) => {\n  const uploadFile = (e) => {\n    e.preventDefault(); // Prevent Page reload\n\n    // Get the form data\n    const formData = new FormData();\n    const selectedFile = document.getElementById(\"inputGroupFile02\").files[0];\n    formData.append(\"file\", selectedFile);\n\n    // Set options for Request\n    var requestOptions = {\n      method: \"PUT\",\n      body: formData,\n      mode: \"cors\",\n      headers: {\n        Accept: \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        Connection: \"keep-alive\",\n      },\n    };\n\n    // Define Values in rquest header\n    var myHeaders = new Headers();\n    myHeaders.append(\n      \"Authorization\",\n      \"Token 37ba188c2184d0009fd814a17ec696c39de9644e\"\n    );\n\n    // Send HTTP request\n    fetch(props.upload_ep, requestOptions).then((response) =>\n      checkStatus(response)\n    );\n  };\n\n  // Execute is HTTP request is succesful.\n  const checkStatus = (response) => {\n    console.log(response);\n\n    if (response.status === 200) {\n      console.log(\"Det virker\");\n    }\n  };\n\n  return (\n    <form onSubmit={uploadFile}>\n      <div className=\"input-group\">\n        <input\n          type=\"file\"\n          name=\"input_file\"\n          className=\"form-control br-0\"\n          id=\"inputGroupFile02\"\n          accept=\".csv\"\n        />\n        <button type=\"submit\" className=\"btn btn-auth br-0\">\n          Upload\n        </button>\n      </div>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}